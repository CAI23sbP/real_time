<launch>
    <!-- robot booting mode -->
    <arg name="record_data" default="true"/>
    <arg name="set_detector" default="dr_spaam"/>
    <arg name="real_time_model" default="SARL"/>
    <arg name="ns" default="test"/>
    <arg name="num_envs" default="1"/>
    
    <node pkg="cai_core" type="core_node.py" name="CoreNode" ns="$(env ROS_HOSTNAME)">
        <rosparam file="$(find cai_core)/param/$(env ROBOT_MODEL)/core_params_robot.yaml" command="load"/>
        <rosparam file="/root/robot_db/param/$(env ROBOT_MODEL)/bridge_config_robot.yaml" command="load"/>
        <param name="tf_prefix" value="$(env ROS_HOSTNAME)"/>
    </node>


    <node pkg="spacial_horizon" type="spacial_horizon_node" name="spacial_horizon_node" output="screen" >
        <rosparam file="$(find simulation-setup)/robot/$(arg model)/costmaps/plan_fsm_param.yaml" command="load" />
        <remap from="/move_base_simple/goal" to="$(arg ns)/move_base_simple/goal" />
        <remap from="/move_base/NavfnROS/make_plan" to="$(arg ns)/move_base/NavfnROS/make_plan" />
        <!-- <remap from="/clock" to="$(arg ns)/clock" />
        <remap from="/odom" to="$(arg ns)/odom" />
        <remap from="/subgoal" to="$(arg ns)/subgoal" />
        <remap from="/goal" to="$(arg ns)/goal" />
        <remap from="/global_plan" to="$(arg ns)/global_plan" /> -->
      </node>

    <node pkg="evaluation" type="data_recorder_node.py" name="data_recorder_node" if="$(eval arg('record_data'))" />

    <node pkg="dr_spaam_ros" type="node.py" name="dr_spaam_ros" output="screen"  if="$(eval arg('set_detector')== 'dr_spaam')">
        <rosparam command="load" file="$(find dr_spaam_ros)/config/dr_spaam_ros.yaml"/>
        <rosparam command="load" file="$(find dr_spaam_ros)/config/topics.yaml"/>
        <remap from="/clock" to="/$(arg ns)/clock"/>
        <remap from="/dr_spaam_detections" to="/$(arg ns)/dr_spaam_detections"/>
        <remap from="/dr_spaam_vel" to="/$(arg ns)/dr_spaam_vel"/>
    </node>
    
    <include file="$(find crowdnav-ros)/launch/crowd_node.launch" if="$(eval arg('real_time_model') in ['CADRL','LSTM','SARL','RGL','DSRNN'])">
        <arg name="training_model" value="$(arg real_time_model)"/>
        <arg name="ns" value="$(arg ns_prefix)_$(arg num_envs)" />
    </include> 

    
</launch>
    